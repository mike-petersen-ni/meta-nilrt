#!/bin/bash
#
# Copyright (c) 2013,2017,2023 National Instruments
#

# Something in base is installing /etc/natinst/share/uninstall that may not be
# getting installed for SystemLink. nisid will fail if this directory doesn't
# install, so this component ought to install /etc/natinst/share/uninstall
# itself, regardless of if some other component ultimately will too.
mkdir -p -m 755 /etc/natinst/share/uninstall

# Enable ssh by default when installing SystemLink.
/usr/local/natinst/bin/nirtcfg -s section=systemsettings,token=sshd.enabled,value=True

# Add the memory reservation for Base. We assert that if the section exists,
# it's already been added.
if ! grep -q 'RtLinuxMemReserve' /etc/natinst/share/ni-rt.ini; then
	cat >> /etc/natinst/share/ni-rt.ini <<EOF
[RtLinuxMemReserve]
Base=24
EOF
fi

# Artemis introduced a new type of design which combined the use of zynq with an
# ext4 filesystem drive as its main disk. Hence, some configurations are needed
# for the systemlink software installation to be executed properly.

# check for artemis compatibility from devicetree
if grep -qs artemis /sys/firmware/devicetree/base/compatible ; then

    # configure the partitions to mount by label in fstab
    sed -i '/ubifs/d' /etc/fstab

    # configure the path for fw_printenv to read environmental variables from u-boot
    # replace /dev/mtd4 and /dev/mtd5 with /boot/uboot/uboot.env
    sed -i '/mtd/d' /etc/fw_env.config
    echo /boot/uboot/uboot.env         0x0000         0x20000 >> /etc/fw_env.config

fi

arch="`uname -m`"
mount_point="/boot"
class="`/sbin/fw_printenv -n TargetClass`"


if [ "$arch" = "x86_64" ]; then
	kernel="/boot/runmode"
else
	echo >&2 "ERROR: Unsupported platform"
	exit 1
fi

# Give hwclock CAP_SYS_TIME capabilties
/usr/sbin/setcap CAP_SYS_TIME+ep /sbin/hwclock.util-linux

# Use persistent names on PXI, not on any other targets
[ "$class" = "PXI" ] || touch /etc/udev/rules.d/80-net-name-slot.rules

# Enable core dumps on PXI, not on any other targets
[ "$class" = "PXI" ] && echo "* soft core unlimited" > /etc/security/limits.d/allow-core-dumps.conf

# update module dependencies
RUNMODE_KERNEL_VERSION=$(/bin/ls -1 /lib/modules | head -n 1)
if ! /sbin/depmod -a "${RUNMODE_KERNEL_VERSION}"; then
	exit 1
fi

# Import NI signing key for subsequent opkg operations
opkg-key populate
